llik <- function(par) {
sum(dgamma(seaLevel, shape=par[1], rate=par[2], log=TRUE))
}
est <- optim(c(1,1), llik, control=c(fnscale=-1))
dykeLevel2 <- qgamma((1-p)^(1/year), shape=est$par[1], rate=est$par[2])
maxSeaLevel <- numeric(N)
for (i in 1:N) {
maxSeaLevel[i] <- max(seaLevel[(i-1)*year + 1:year])
}
hist(maxSeaLevel, xlim=c(0, max(maxSeaLevel, dykeLevel)))
abline(v = c(dykeLevel, dykeLevel2), col="red")
axis(1, dykeLevel, labels = "dyke")
hist(maxSeaLevel, xlim=c(0, max(maxSeaLevel, dykeLevel)))
abline(v = c(dykeLevel, dykeLevel2), col=c("red", "green"))
axis(1, dykeLevel, labels = "dyke")
hist(maxSeaLevel, xlim=c(0, max(maxSeaLevel, dykeLevel)))
abline(v = c(dykeLevel, dykeLevel2), col=c("red", "green"))
axis(1, dykeLevel, labels = "dyke")
install.pakcage(evd)
install.package(evd)
install.packages(evd)
install.packages("evd")
install.packages("extReme")
install.packages("extRemes")
library(evd)
library(ismev)
library(ExtremalDep)
install.library(ExtremalDep)
install.packages(ExtremalDep)
install.packages("ExtremalDep")
install.packages("ismev")
year = 12; N = 10
time <- seq(1, N*year)
airPoll <- rgev(N*year, -1, 1, -1)
plot(time, airPoll)
plot(time, airPoll, col="blue")
year = 12; N = 10
time <- seq(1, N*year)
airPoll <- rgev(N*year, -1, 1, -1)
plot(time, airPoll, col="blue")
airPoll <- rgev(N*year, 1, 1, 1)
plot(time, airPoll, , col="red")
airPoll <- rgev(N*year, 0, 1, 0)
plot(time, airPoll, , col="green")
year = 12; N = 10
time <- seq(1, N*year)
par(mfcol=c(1,3))
airPoll <- rgev(N*year, -1, 1, -1)
plot(time, airPoll, col="blue")
airPoll <- rgev(N*year, 1, 1, 1)
plot(time, airPoll, , col="red")
airPoll <- rgev(N*year, 0, 1, 0)
plot(time, airPoll, , col="green")
year = 12; N = 10
time <- seq(1, N*year)
par(mfcol=c(1,3))
airPoll <- rgev(N*year, -1, 1, -1)
plot(time, airPoll, col="blue")
airPoll <- rgev(N*year, 1, 1, 1)
plot(time, airPoll, , col="red")
airPoll <- rgev(N*year, 0, 1, 0)
plot(time, airPoll, , col="green")
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
example(stan_model, package = "rstan", run.dontrun = TRUE)
remove.packages("ismev")
remove.packages("ExtremalDep")
remove.packages("SpatialExtremes")
remove.packages("evd")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
install.packages("RcppParallel")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
install.packages("StanHeaders")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
install.packages("ggplot")
install.packages("ggplot2")
.libPaths()
old_packages <- installed.packages(lib.loc = /home/rotisayabundar/R/x86_64-pc-linux-gnu-library/3.6)
old_packages <- installed.packages(lib.loc = "/home/rotisayabundar/R/x86_64-pc-linux-gnu-library/3.6"")
old_packages <- as.data.frame(old_packages)
list.of.packages <- unlist(old_packages$Package)
# remove old packages
remove.packages( installed.packages( priority = "NA" )[,1] )
# reinstall all packages
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages,function(x){library(x,character.only=TRUE)})
remove.packages( installed.packages( priority = "NA" )[,1] )
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
update.packages(ask=FALSE, checkBuilt=TRUE)
.libPaths()
install.packages("ggplot2")
.libPaths( c( .libPaths(), "/home/rotisayabundar/R/x86_64-pc-linux-gnu-library/4.0") )
.libPaths()
.libPaths( c( "/home/rotisayabundar/R/x86_64-pc-linux-gnu-library/4.0", .libPaths()) )
.libPaths()
Sys.getenv()[ grep("LIB|PATH", names(Sys.getenv())) ]
.libPaths()
.libPaths(c("/usr/lib/R/library"))
.libPaths()
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
install.packages("threejs")
.libPaths()
sd(c(1,2))
sqrt(1/2)
a0 = 2; b0 = 2; s = 14; n = 20; k = 100
postSamples <- rbeta(k, a0+s, b0+n-s)
mean(postSamples)
sd(postSamples)
15/22
a0 = 2; b0 = 2; s = 14; n = 20; k = 100
postSamples <- rbeta(k, a0+s, b0+n-s)
mean(postSamples)
sd(postSamples)
a0 = 2; b0 = 2; s = 14; n = 20; k = 200
postSamples <- rbeta(k, a0+s, b0+n-s)
mean(postSamples)
sd(postSamples)
a0 = 2; b0 = 2; s = 14; n = 20; k = 1000
postSamples <- rbeta(k, a0+s, b0+n-s)
mean(postSamples)
sd(postSamples)
a0 = 2; b0 = 2; s = 14; n = 20; k = 200
postSamples <- rbeta(k, a0+s, b0+n-s)
mean(postSamples)
sd(postSamples)/sqrt(k)
15/21
15/23
14/22
15/22
postSamples > 0.4
sum(postSamples > 0.4)
postSamples
pbeta(0.4, a0+s, b0+n-s)
sum(postSamples > 0.4)/length(postSamples)
sum(postSamples < 0.4)/length(postSamples)
pbeta(0.4, a0+s, b0+n-s)
a0 = 2; b0 = 2; s = 14; n = 20; k = 200
postSamples <- rbeta(k, a0+s, b0+n-s)
mean(postSamples)
sd(postSamples)/sqrt(k)
# b.
sum(postSamples < 0.4)/length(postSamples)
pbeta(0.4, a0+s, b0+n-s)
a0 = 2; b0 = 2; s = 14; n = 20; k = 1000
postSamples <- rbeta(k, a0+s, b0+n-s)
mean(postSamples)
sd(postSamples)/sqrt(k)
# b.
sum(postSamples < 0.4)/length(postSamples)
pbeta(0.4, a0+s, b0+n-s)
15/22
mean(c(1,2))
mean(c(1,2,3))
apply(c(1, 2), fun = function(x) x+1)
apply(c(1, 2), FUN <- function(variables) {
} = function(x) x+1)
apply(c(1, 2), FUN <- function(x) x+1)
apply(c(1, 2), FUN <- function(x) {x+1})
apply(c(1, 2), 1, function(x) {x+1})
sapply(c(1, 2), function(x) {x+1})
sapply(c(1, 2), function(x) x+1)
hist(sapply(postSamples, function(x) log(x/(1-x))))
logOdds <- sapply(postSamples, function(x) log(x/(1-x)))
hist(logOdds)
c(1.2)/c(2,3)
mapply(function(x, y) x/y, c(1.2), c(2,3))
c(1,2)/c(2,3)
library(poolr)
install.packages("poolr")
.libPaths()
remove.packages("poolr")
install.packages("geoR")
mean(postSamples) # actual mean: (a0+s-1)/(a0+b0+n-2) = 15/22
sd(postSamples)/sqrt(k)
a0 = 2; b0 = 2; s = 14; n = 20; k = 1000
postSamples <- rbeta(k, a0+s, b0+n-s)
mean(postSamples) # actual mean: (a0+s)/(a0+b0+n) = 16/24
sd(postSamples)/sqrt(k)
remove.packages("poolr")
library(LaplacesDemon)
install.packages(LaplacesDemon)
install.packages("LaplacesDemon")
library(LaplacesDemon)
obs <- c(27, 37, 44, 52, 60, 71, 83, 100, 133, 150)
mu = 4.5; n = 10; k = 10000;
sim <- rinvchisq(k, n, mu)
hist(sim)
sim <- rinvchisq(k, n, (log(obs) - mu)^2/n)
hist(sim)
sim <- rinvchisq(k, n, sqrt((log(obs) - mu)^2/n))
hist(sim)
dnorm(0)
pnorm(0)
dnorm(0)
dga,,a(0)
dgamma(0)
dunif(0)
dunif(-1)
dunif(1)
pnorm(c(0, 0))
Gs <- 2*pnorm(sigmaSqs/sqrt(2)) -1
hist(Gs)
library(LaplacesDemon)
obs <- c(27, 37, 44, 52, 60, 71, 83, 100, 133, 150)
mu = 4.5; n = 10; k = 10000;
sigmaSqs <- rinvchisq(k, n, sqrt((log(obs) - mu)^2/n))
# c.
Gs <- 2*pnorm(sigmaSqs/sqrt(2)) -1
hist(Gs)
library(LaplacesDemon)
obs <- c(27, 37, 44, 52, 60, 71, 83, 100, 133, 150)
mu = 4.5; n = 10; k = 10000;
sigmaSqs <- rinvchisq(k, n, sqrt((log(obs) - mu)^2/n))
# c.
G <- 2*pnorm(sigmaSqs/sqrt(2)) -1
hist(G)
G <- 2*pnorm(sigmaSqs/sqrt(2)) -1
hist(G)
credibleIntv <- function(a0) pgamma(5, a0, 4*a0) - pgamma(3, a0, 4*a0)
a0 <- seq(0, 5, 0.1)
probLambdaBetween3And5 <- sapply(a0, credibleIntv)
plot(a0, probLambdaBetween3And5)
credibleIntv <- function(a0) pgamma(5, a0, 4*a0) - pgamma(3, a0, 4*a0)
a0 <- seq(0, 1, 0.1)
probLambdaBetween3And5 <- sapply(a0, credibleIntv)
plot(a0, probLambdaBetween3And5)
credibleIntv <- function(a0) pgamma(5, a0, 4*a0) - pgamma(3, a0, 4*a0)
a0 <- seq(0, 1, 0.1)
probLambdaBetween3And5 <- sapply(a0, credibleIntv)
plot(a0, probLambdaBetween3And5)
credibleIntv <- function(a0) pgamma(5, a0, 4*a0) - pgamma(3, a0, 4*a0)
a0 <- seq(0, 0.1, 0.01)
probLambdaBetween3And5 <- sapply(a0, credibleIntv)
plot(a0, probLambdaBetween3And5)
credibleIntv <- function(a0) pgamma(5, a0, a0/4) - pgamma(3, a0, a0/4)
a0 <- seq(0, 1, 0.1)
probLambdaBetween3And5 <- sapply(a0, credibleIntv)
plot(a0, probLambdaBetween3And5)
credibleIntv <- function(a0) pgamma(5, a0, a0/4) - pgamma(3, a0, a0/4)
a0 <- seq(0, 5, 0.1)
probLambdaBetween3And5 <- sapply(a0, credibleIntv)
plot(a0, probLambdaBetween3And5)
credibleIntv <- function(a0) pgamma(5, a0, a0/4) - pgamma(3, a0, a0/4)
a0 <- seq(5, 6, 0.1)
probLambdaBetween3And5 <- sapply(a0, credibleIntv)
plot(a0, probLambdaBetween3And5)
credibleIntv <- function(a0) pgamma(5, a0, a0/4) - pgamma(3, a0, a0/4)
a0 <- seq(6, 8, 0.1)
probLambdaBetween3And5 <- sapply(a0, credibleIntv)
plot(a0, probLambdaBetween3And5)
credibleIntv <- function(a0) pgamma(5, a0, a0/4) - pgamma(3, a0, a0/4)
a0 <- seq(7, 7.5, 0.01)
probLambdaBetween3And5 <- sapply(a0, credibleIntv)
plot(a0, probLambdaBetween3And5)
credibleIntv <- function(a0) pgamma(5, a0, a0/4) - pgamma(3, a0, a0/4)
a0 <- seq(7, 7.5, 0.1)
probLambdaBetween3And5 <- sapply(a0, credibleIntv)
plot(a0, probLambdaBetween3And5)
# Approx a0 = 7.2, b0 = 1.8
a0 = 7.2; b0 = 1.8
ys <- c(2, 5, 3, 5, 3, 1)
ns <- c(120342, 235967, 243745, 197452, 276935, 157222)
am <- a0 + sum(ys)
bm <- b0 + sum(ns)/100000
lambda <- seq(-3, 3, 0.1)
plot(lambda, dgamma(lambda, a0, b0))
am <- a0 + sum(ys)
bm <- b0 + sum(ns)/100000
lambda <- seq(0, 5, 0.1)
plot(lambda, dgamma(lambda, a0, b0))
dgamma(lambda, am, bm)
lambda <- seq(0, 10, 0.1)
plot(lambda, dgamma(lambda, a0, b0))
dgamma(lambda, am, bm)
plot(lambda)
lines(dgamma(lambda, a0, b0))
help("plot")
plot(lambda, dgamma(lambda, a0, b0), type="l")
lines(lambda, dgamma(lambda, am, bm)
)
plot(lambda, dgamma(lambda, a0, b0), type="l", ylim = c(0, 1))
lines(lambda, dgamma(lambda, am, bm))
plot(lambda, dgamma(lambda, a0, b0), type="l", ylim = c(0, 2))
lines(lambda, dgamma(lambda, am, bm))
plot(lambda, dgamma(lambda, a0, b0), type="l", ylim = c(0, 1.5))
lines(lambda, dgamma(lambda, am, bm))
plot(lambda, dgamma(lambda, a0, b0), type="l", ylim = c(0, 1.2))
lines(lambda, dgamma(lambda, am, bm))
credibleIntv <- function(a0) pgamma(5, a0, a0/4) - pgamma(3, a0, a0/4)
a0 <- seq(7, 7.5, 0.1)
probLambdaBetween3And5 <- sapply(a0, credibleIntv)
plot(a0, probLambdaBetween3And5)
p <- function(a0) pgamma(5, a0, a0/4) - pgamma(3, a0, a0/4)
a0 <- seq(7, 7.5, 0.1)
probLambdaBetween3And5 <- sapply(a0, p)
plot(a0, probLambdaBetween3And5)
p <- function(a, b = a/4) pgamma(5, a, b) - pgamma(3, a, b)
a0 <- seq(7, 7.5, 0.1)
probLambdaBetween3And5 <- sapply(a0, p)
plot(a0, probLambdaBetween3And5)
p(am, bm)
library(haven)
X1ResearchProjectData <- read_sav("Downloads/1ResearchProjectData.sav")
View(X1ResearchProjectData)
install.packages(c('pbdZMQ', 'repr', 'devtools'))
install.packages(c("pbdZMQ", "repr", "devtools"))
devtools::install_github('IRkernel/IRdisplay')
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
install.packages('devtool')
install.packages('devtools')
install.packages(c('libfreetype6-dev','libpng-dev', 'libtiff5-dev', 'libjpeg-dev'))
install.packages(ggscatter)
install.packages("ggscatter"
)
install.packages("car")
install.packages("car", dependencies = TRUE)
install.packages("effects", dependencies = TRUE)
install.packages("car",dependencies=TRUE)
install.packages("car",repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com"))
install.packages(c("car", "pbkrtest", "lme4"),repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com"))
install.packages(c("car", "pbkrtest", "lme4"),repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com"), dependencies = TRUE)
install.packages(c("car"),repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com"), dependencies = TRUE)
install.packages(c("car"),repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com"), dependencies = TRUE)
install.packages(c("DescTools"),repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com"), dependencies = TRUE)
install.packages(c("ggfortify"),repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com"), dependencies = TRUE)
install.packages(chron)
install.packages("chron")
data <- read.csv("Hospital ER.csv")
ls
data <- read.csv("Hospital ER.csv")
pwd
strsplit(c("a b", "c d"
), split = " ")
strsplit(c("a b", "c d"), split = " ")[, 1]
install.packages("DataExplorer")
install.packages("zoo")
install.packages("sure")
install.packages("gridExtra")
rm(list=())
rm(ls=())
rm(ls=[]
rm(ls=[])
rm(ls=list())
rm(list = ls())
read.xls("haiavanas_receipts.xlsx")
read.table("havaianas_receipts.xlsx")
setwd("Downloads/projects")
read.table("havaianas_receipts.xlsx")
x <- read.table("havaianas_receipts.xlsx")
x <- read.table("havaianas_receipts.xlsx", sep="\t")
x <- read.table("havaianas_receipts.xlsx", sep="\t", header=TRUE)
x <- read.table("clipboard", sep="\t", header=TRUE)
install.packages("readxl")
x <- read_excel("havaianas_receipts.xlsx", sep="\t", header=TRUE)
library("readxl")
x <- read_excel("havaianas_receipts.xlsx", sep="\t", header=TRUE)
x <- read_excel("havaianas_receipts.xlsx")
kmeans_model <- kmeans(x$total_amount_with_gst, centers = 3)
View(kmeans_model)
kmeans_model$centers
kmeans_model$cluster
plot(x$total_amount_with_gst, kmeans_model$cluster, main = "K-Means Clustering",
xlab = "Sales", ylab = "Y Axis")
plot(x$know_how, x$total_amount_with_gst, col = kmeans_model$cluster
main = "Sales Clusters", xlab = "Variable", ylab = "Sales")
lot(x$know_how, x$total_amount_with_gst, col = kmeans_model$cluster,
main = "Sales Clusters", xlab = "Variable", ylab = "Sales")
plot(x$know_how, x$total_amount_with_gst, col = kmeans_model$cluster,
main = "Sales Clusters", xlab = "Variable", ylab = "Sales")
plot(x$"time interval", x$total_amount_with_gst, col = kmeans_model$cluster,
main = "Sales Clusters", xlab = "Variable", ylab = "Sales")
x$know_how <- factor(x$know_how)
library("readxl")
x <- read_excel("havaianas_pos.xlsx")
x$know_how <- factor(x$know_how)
kmeans_model <- kmeans(x$total_amount_with_gst, centers = 4)
plot(x$know_how, x$total_amount_with_gst, col = kmeans_model$cluster,
main = "Sales Clusters", xlab = "Variable", ylab = "Sales")
plot(x$"time interval", x$total_amount_with_gst, col = kmeans_model$cluster,
main = "Sales Clusters", xlab = "Variable", ylab = "Sales")
x <- read_excel("havaianas_pos.xlsx", sheet = "aggregated sales")
x$know_how <- factor(x$know_how)
kmeans_model <- kmeans(x$total_amount_with_gst, centers = 4)
# 1 cluster is for outlier
plot(x$time_interval, x$total_amount_with_gst, col = kmeans_model$cluster,
main = "Sales Clusters", xlab = "Variable", ylab = "Sales")
plot(x$know_how, x$total_amount_with_gst, col = kmeans_model$cluster,
main = "Sales Clusters", xlab = "Variable", ylab = "Sales")
tot_sales <- read_excel("havaianas_pos.xlsx", sheet = "aggregated sales")
tot_sales$know_how <- factor(tot_sales$know_how)
# 1 cluster is for outlier
kmeans_model <- kmeans(tot_sales$total_amount_with_gst, centers = 4)
tot_sales$cluster <- kmeans_model$cluster
p <- ggplot(tot_sales$total_amount_with_gst, aes(know_how, sales, col = cluster)) +
geom_ribbon() +
labs(title = "Sales Clusters", x = "Var", y = "Sales")
library("readxl")
tot_sales <- read_excel("havaianas_pos.xlsx", sheet = "aggregated sales")
tot_sales$know_how <- factor(tot_sales$know_how)
# 1 cluster is for outlier
kmeans_model <- kmeans(tot_sales$total_amount_with_gst, centers = 4)
tot_sales$cluster <- kmeans_model$cluster
library("ggplot2")
p <- ggplot(tot_sales$total_amount_with_gst, aes(know_how, sales, col = cluster)) +
geom_ribbon() +
labs(title = "Sales Clusters", x = "Var", y = "Sales")
p <- ggplot(tot_sales, aes(know_how, sales, col = cluster)) +
geom_ribbon() +
labs(title = "Sales Clusters", x = "Var", y = "Sales")
ggplot(tot_sales, aes(know_how, sales, col = cluster)) +
geom_ribbon() +
labs(title = "Sales Clusters", x = "Var", y = "Sales")
library("readxl")
tot_sales <- read_excel("havaianas_pos.xlsx", sheet = "aggregated sales")
tot_sales$know_how <- factor(tot_sales$know_how)
# 1 cluster is for outlier
kmeans_model <- kmeans(tot_sales$total_amount_with_gst, centers = 4)
kmeans_model <- kmeans(tot_sales$sales, centers = 4)
tot_sales$cluster <- kmeans_model$cluster
library("ggplot2")
ggplot(tot_sales, aes(know_how, sales, col = cluster)) +
geom_ribbon() +
labs(title = "Sales Clusters", x = "Var", y = "Sales")
ggplot(tot_sales, aes(know_how, sales, col = cluster, ymin = 0, ymax = 1000)) +
geom_ribbon() +
labs(title = "Sales Clusters", x = "Var", y = "Sales")
ggplot(tot_sales, aes(know_how, sales, col = cluster, ymin = 0, ymax = 1000)) +
geom_ribbon() +
geom_point() +
labs(title = "Sales Clusters", x = "Var", y = "Sales")
ggplot(tot_sales, aes(know_how, sales, col = cluster, ymin = 0, ymax = 1000)) +
#geom_ribbon() +
geom_point() +
labs(title = "Sales Clusters", x = "Var", y = "Sales")
remove(x)
remove(p)
tot_sales <- read_excel("havaianas_pos.xlsx", sheet = "aggregated sales")
cat_var <- c("know_how", "often_buy", "gender", "age")
tot_sales[, cat_var] <- factor(tot_sales[, cat_var])
library("ggplot2")
ggplot(tot_sales, aes(know_how, sales, col = cluster, ymin = 0, ymax = 1000)) +
#geom_ribbon() +
geom_point() +
labs(title = "Sales Clusters", x = "Var", y = "Sales")
kmeans_model <- kmeans(tot_sales$sales, centers = 4)
tot_sales$cluster <- kmeans_model$cluster
library("ggplot2")
ggplot(tot_sales, aes(know_how, sales, col = cluster, ymin = 0, ymax = 1000)) +
#geom_ribbon() +
geom_point() +
labs(title = "Sales Clusters", x = "Var", y = "Sales")
ggplot(tot_sales, aes(know_how, sales, col = cluster, ymin = 0, ymax = 1000)) +
geom_ribbon() +
geom_point() +
labs(title = "Sales Clusters", x = "Var", y = "Sales")
ggplot(tot_sales, aes(know_how, sales, col = cluster, ymin = 0, ymax = 1000)) +
geom_ribbon() +
labs(title = "Sales Clusters", x = "Var", y = "Sales")
ggplot(tot_sales, aes(know_how, sales, col = cluster, ymin = 0, ymax = 1000)) +
geom_point() +
labs(title = "Sales Clusters", x = "Var", y = "Sales")
ggplot(tot_sales, aes(know_how, sales, col = cluster, ymin = 0, ymax = 1000)) +
geom_point(position = "jitter") +
labs(title = "Sales Clusters", x = "Var", y = "Sales")
ggplot(tot_sales, aes(gender, age, col = cluster)) +
geom_point(position = "jitter") +
labs(title = "Sales Clusters", x = "Var", y = "Var"
)
tot_sales <- tot_sales[-which(tot_sales$sales > 600), ]
# 1 cluster is for outlier
kmeans_model <- kmeans(tot_sales$sales, centers = 3)
tot_sales$cluster <- kmeans_model$cluster
library("ggplot2")
ggplot(tot_sales, aes(gender, age, col = cluster)) +
geom_point(position = "jitter") +
labs(title = "Sales Clusters", x = "Var", y = "Var")
View(tot_sales)
tot_sales$cluster <- factor(kmeans_model$cluster)
library("ggplot2")
ggplot(tot_sales, aes(gender, age, col = cluster)) +
geom_point(position = "jitter") +
labs(title = "Sales Clusters", x = "Var", y = "Var")
ggplot(tot_sales, aes(gender, sales, col = cluster)) +
geom_point(position = "jitter") +
labs(title = "Sales Clusters", x = "Var", y = "Var")
ggplot(tot_sales, aes(know_how, sales, col = cluster)) +
geom_beeswarm() +
labs(title = "Sales Clusters", x = "Var", y = "Var")
install.packages("ggbeeswarm")
library(ggbeeswarm)
ggplot(tot_sales, aes(know_how, sales, col = cluster)) +
geom_beeswarm() +
labs(title = "Sales Clusters", x = "Var", y = "Var")
ggplot(tot_sales, aes(know_how, sales, col = cluster)) +
geom_beeswarm(cex = 3) +
labs(title = "Sales Clusters", x = "Var", y = "Var")
ggplot(tot_sales, aes(know_how, sales, col = cluster)) +
geom_beeswarm(cex = 1) +
labs(title = "Sales Clusters", x = "Var", y = "Var")
ggplot(tot_sales, aes(gender, sales, col = cluster)) +
geom_beeswarm(cex = 1) +
labs(title = "Sales Clusters", x = "Var", y = "Var")
