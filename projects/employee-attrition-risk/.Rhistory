for (i in 1:length(unique_vals)) {
first_occur[i] <- which(x == unique_vals[i])[1]
}
return(first_occur)
}
create_buttons <- function(vars) {
x <- factor(hr_sorted_rsf[[vars[2]]])
print(1:cutoff %in% unique_index(as.numeric(x)))
print(x)
lapply(vars, function(var) {
color_palletes <- brewer.pal(12, "Set3")
var_factors <- as.numeric(factor(hr_sorted_rsf[[var]]))
button <- list(
method = "restyle",
label = var,
args = list(list( # Some elements are just "double-list". This changes style to every DOM elements
line.color = color_palletes[var_factors],
marker.color = color_palletes[var_factors],
legendgroup = factor(hr_sorted_rsf[[var]]),
showlegend = 1:cutoff %in% unique_index(var_factors),
name = hr_sorted_rsf[[var]]
))
)
return(button)
})
}
# Setting layout
fig <- fig %>% layout(
title = "High-Risk Employee Attrition Trajectory",
xaxis = list(title = "Year", range = c(0, 5), zerolinecolor = '#ffff'),
yaxis = list(title = "Accummulated Risk until Year _", range = c(0, 1.5), zerolinecolor = '#ffff'),
plot_bgcolor = '#e5ecf6',
updatemenus = list(
list(
y = 0.9,
showactive = TRUE,
buttons = create_buttons(c("EmployeeNumber", "BusinessTravel", "EnvironmentSatisfaction", "Gender",
"JobLevel", "JobRole", "JobSatisfaction", "MaritalStatus", "NumCompaniesWorked",
"OverTime", "StockOptionLevel"))
)
),
annotations = list(
list(
text = "Based on", x = -0.3, xref = "paper", y = 1, yref = "paper", align = "left", showarrow = FALSE
)
)
)
fig
fig <- plot_ly(type = "scatter", mode = "lines+markers")
for (rank in 1:cutoff) {
employee_row_num <- as.numeric(rownames(hr_sorted_rsf)[rank])
employee_row <- hr_sorted_rsf[rank, ]
x <- 0:(ncol(rsf_risk)-1)
y <- rsf_risk[employee_row_num, ]
fig <- fig %>% add_trace(x = x,
y = y,
name = employee_row["EmployeeNumber"],
marker = list(size = 4),
line = list(shape = "spline", width = 1),
hoverinfo = "text",
text = paste0("<i>#", rank, ": Employee ", employee_row["EmployeeNumber"], "</i>",
"\nYear: ", x,
"\nScore: ", y),
legendgroup = employee_row["EmployeeNumber"],
showlegend = TRUE
)
}
# Including the baseline
avg_cum_hazard <- -log(1-mean(hr[, "Attrition"]))
baseline <- list(
type = "line", x0 = 0, x1 = 5, y0 = avg_cum_hazard, y1 = avg_cum_hazard,
line = list(dash = "dash", width = 4, color = "#82A0D8")
)
fig <- fig %>% layout(
shapes = list(baseline)
) %>% add_text(
showlegend = FALSE, x = 0.25, y = 0.22, text = "Average hazard",
)
# Adding options to group them based on variables
library(RColorBrewer)
unique_index <- function(x) {
unique_vals <- unique(x)
first_occur <- integer(length(unique_vals))
for (i in 1:length(unique_vals)) {
first_occur[i] <- which(x == unique_vals[i])[1]
}
return(first_occur)
}
create_buttons <- function(vars) {
x <- factor(hr_sorted_rsf[[vars[2]]])
print(1:cutoff %in% unique_index(as.numeric(x)))
print(x)
lapply(vars, function(var) {
color_palletes <- brewer.pal(12, "Set3")
var_factors <- as.numeric(factor(hr_sorted_rsf[[var]]))
button <- list(
method = "restyle",
label = var,
args = list(list( # Some elements are just "double-list". This changes style to every DOM elements
line.color = color_palletes[var_factors],
marker.color = color_palletes[var_factors],
legendgroup = factor(hr_sorted_rsf[[var]]),
showlegend = 1:cutoff %in% unique_index(var_factors),
name = factor(hr_sorted_rsf[[var]]),
trace = 1:cutoff
))
)
return(button)
})
}
# Setting layout
fig <- fig %>% layout(
title = "High-Risk Employee Attrition Trajectory",
xaxis = list(title = "Year", range = c(0, 5), zerolinecolor = '#ffff'),
yaxis = list(title = "Accummulated Risk until Year _", range = c(0, 1.5), zerolinecolor = '#ffff'),
plot_bgcolor = '#e5ecf6',
updatemenus = list(
list(
y = 0.9,
showactive = TRUE,
buttons = create_buttons(c("EmployeeNumber", "BusinessTravel", "EnvironmentSatisfaction", "Gender",
"JobLevel", "JobRole", "JobSatisfaction", "MaritalStatus", "NumCompaniesWorked",
"OverTime", "StockOptionLevel"))
)
),
annotations = list(
list(
text = "Based on", x = -0.3, xref = "paper", y = 1, yref = "paper", align = "left", showarrow = FALSE
)
)
)
fig
fig <- plot_ly(type = "scatter", mode = "lines+markers")
for (rank in 1:cutoff) {
employee_row_num <- as.numeric(rownames(hr_sorted_rsf)[rank])
employee_row <- hr_sorted_rsf[rank, ]
x <- 0:(ncol(rsf_risk)-1)
y <- rsf_risk[employee_row_num, ]
fig <- fig %>% add_trace(x = x,
y = y,
name = employee_row["EmployeeNumber"],
marker = list(size = 4),
line = list(shape = "spline", width = 1),
hoverinfo = "text",
text = paste0("<i>#", rank, ": Employee ", employee_row["EmployeeNumber"], "</i>",
"\nYear: ", x,
"\nScore: ", y),
legendgroup = employee_row["EmployeeNumber"],
showlegend = TRUE
)
}
# Including the baseline
avg_cum_hazard <- -log(1-mean(hr[, "Attrition"]))
baseline <- list(
type = "line", x0 = 0, x1 = 5, y0 = avg_cum_hazard, y1 = avg_cum_hazard,
line = list(dash = "dash", width = 4, color = "#82A0D8")
)
fig <- fig %>% layout(
shapes = list(baseline)
) %>% add_text(
showlegend = FALSE, x = 0.25, y = 0.22, text = "Average hazard",
)
# Adding options to group them based on variables
library(RColorBrewer)
unique_index <- function(x) {
unique_vals <- unique(x)
first_occur <- integer(length(unique_vals))
for (i in 1:length(unique_vals)) {
first_occur[i] <- which(x == unique_vals[i])[1]
}
return(first_occur)
}
create_buttons <- function(vars) {
x <- factor(hr_sorted_rsf[[vars[2]]])
print(1:cutoff %in% unique_index(as.numeric(x)))
print(x)
lapply(vars, function(var) {
color_palletes <- brewer.pal(12, "Set3")
var_factors <- as.numeric(factor(hr_sorted_rsf[[var]]))
button <- list(
method = "restyle",
label = var,
args = list(list( # Some elements are just "double-list". This changes style to every DOM elements
line.color = color_palletes[var_factors],
marker.color = color_palletes[var_factors],
legendgroup = factor(hr_sorted_rsf[[var]]),
showlegend = 1:cutoff %in% unique_index(var_factors),
name = factor(hr_sorted_rsf[[var]])
#trace = 1:cutoff
))
)
return(button)
})
}
# Setting layout
fig <- fig %>% layout(
title = "High-Risk Employee Attrition Trajectory",
xaxis = list(title = "Year", range = c(0, 5), zerolinecolor = '#ffff'),
yaxis = list(title = "Accummulated Risk until Year _", range = c(0, 1.5), zerolinecolor = '#ffff'),
plot_bgcolor = '#e5ecf6',
updatemenus = list(
list(
y = 0.9,
showactive = TRUE,
buttons = create_buttons(c("EmployeeNumber", "BusinessTravel", "EnvironmentSatisfaction", "Gender",
"JobLevel", "JobRole", "JobSatisfaction", "MaritalStatus", "NumCompaniesWorked",
"OverTime", "StockOptionLevel"))
)
),
annotations = list(
list(
text = "Based on", x = -0.3, xref = "paper", y = 1, yref = "paper", align = "left", showarrow = FALSE
)
)
)
fig
create_buttons <- function(vars) {
x <- factor(hr_sorted_rsf[[vars[2]]])
print(1:cutoff %in% unique_index(as.numeric(x)))
print(x)
lapply(vars, function(var) {
color_palletes <- brewer.pal(12, "Set3")
var_factors <- as.numeric(factor(hr_sorted_rsf[[var]]))
button <- list(
method = "restyle",
label = var,
args = list(list( # Some elements are just "double-list". This changes style to every DOM elements
line.color = color_palletes[var_factors],
marker.color = color_palletes[var_factors],
legendgroup = factor(hr_sorted_rsf[[var]]),
showlegend = 1:cutoff %in% unique_index(var_factors),
name = factor(hr_sorted_rsf[[var]]),
traces = 1:cutoff
))
)
return(button)
})
}
# Setting layout
fig <- fig %>% layout(
title = "High-Risk Employee Attrition Trajectory",
xaxis = list(title = "Year", range = c(0, 5), zerolinecolor = '#ffff'),
yaxis = list(title = "Accummulated Risk until Year _", range = c(0, 1.5), zerolinecolor = '#ffff'),
plot_bgcolor = '#e5ecf6',
updatemenus = list(
list(
y = 0.9,
showactive = TRUE,
buttons = create_buttons(c("EmployeeNumber", "BusinessTravel", "EnvironmentSatisfaction", "Gender",
"JobLevel", "JobRole", "JobSatisfaction", "MaritalStatus", "NumCompaniesWorked",
"OverTime", "StockOptionLevel"))
)
),
annotations = list(
list(
text = "Based on", x = -0.3, xref = "paper", y = 1, yref = "paper", align = "left", showarrow = FALSE
)
)
)
fig
fig <- plot_ly(type = "scatter", mode = "lines+markers")
for (rank in 1:cutoff) {
employee_row_num <- as.numeric(rownames(hr_sorted_rsf)[rank])
employee_row <- hr_sorted_rsf[rank, ]
x <- 0:(ncol(rsf_risk)-1)
y <- rsf_risk[employee_row_num, ]
fig <- fig %>% add_trace(x = x,
y = y,
name = employee_row["EmployeeNumber"],
marker = list(size = 4),
line = list(shape = "spline", width = 1),
hoverinfo = "text",
text = paste0("<i>#", rank, ": Employee ", employee_row["EmployeeNumber"], "</i>",
"\nYear: ", x,
"\nScore: ", y),
legendgroup = employee_row["EmployeeNumber"],
showlegend = TRUE
)
}
# Including the baseline
avg_cum_hazard <- -log(1-mean(hr[, "Attrition"]))
baseline <- list(
type = "line", x0 = 0, x1 = 5, y0 = avg_cum_hazard, y1 = avg_cum_hazard,
line = list(dash = "dash", width = 4, color = "#82A0D8")
)
fig <- fig %>% layout(
shapes = list(baseline)
) %>% add_text(
showlegend = FALSE, x = 0.25, y = 0.22, text = "Average hazard",
)
# Adding options to group them based on variables
library(RColorBrewer)
unique_index <- function(x) {
unique_vals <- unique(x)
first_occur <- integer(length(unique_vals))
for (i in 1:length(unique_vals)) {
first_occur[i] <- which(x == unique_vals[i])[1]
}
return(first_occur)
}
create_buttons <- function(vars) {
x <- factor(hr_sorted_rsf[[vars[2]]])
print(1:cutoff %in% unique_index(as.numeric(x)))
print(x)
lapply(vars, function(var) {
color_palletes <- brewer.pal(12, "Set3")
var_factors <- as.numeric(factor(hr_sorted_rsf[[var]]))
button <- list(
method = "restyle",
label = var,
args = list(list( # Some elements are just "double-list". This changes style to every DOM elements
line.color = color_palletes[var_factors],
marker.color = color_palletes[var_factors],
legendgroup = factor(hr_sorted_rsf[[var]]),
showlegend = 1:cutoff %in% unique_index(var_factors),
name = factor(hr_sorted_rsf[[var]]),
traces = 1:cutoff
))
)
return(button)
})
}
# Setting layout
fig <- fig %>% layout(
title = "High-Risk Employee Attrition Trajectory",
xaxis = list(title = "Year", range = c(0, 5), zerolinecolor = '#ffff'),
yaxis = list(title = "Accummulated Risk until Year _", range = c(0, 1.5), zerolinecolor = '#ffff'),
plot_bgcolor = '#e5ecf6',
updatemenus = list(
list(
y = 0.9,
showactive = TRUE,
buttons = create_buttons(c("EmployeeNumber", "BusinessTravel", "EnvironmentSatisfaction", "Gender",
"JobLevel", "JobRole", "JobSatisfaction", "MaritalStatus", "NumCompaniesWorked",
"OverTime", "StockOptionLevel"))
)
),
annotations = list(
list(
text = "Based on", x = -0.3, xref = "paper", y = 1, yref = "paper", align = "left", showarrow = FALSE
)
)
)
fig
fig <- plot_ly(type = "scatter", mode = "lines+markers")
for (rank in 1:cutoff) {
employee_row_num <- as.numeric(rownames(hr_sorted_rsf)[rank])
employee_row <- hr_sorted_rsf[rank, ]
x <- 0:(ncol(rsf_risk)-1)
y <- rsf_risk[employee_row_num, ]
fig <- fig %>% add_trace(x = x,
y = y,
name = employee_row["EmployeeNumber"],
marker = list(size = 4),
line = list(shape = "spline", width = 1),
hoverinfo = "text",
text = paste0("<i>#", rank, ": Employee ", employee_row["EmployeeNumber"], "</i>",
"\nYear: ", x,
"\nScore: ", y),
legendgroup = employee_row["EmployeeNumber"],
showlegend = TRUE
)
}
# Including the baseline
avg_cum_hazard <- -log(1-mean(hr[, "Attrition"]))
baseline <- list(
type = "line", x0 = 0, x1 = 5, y0 = avg_cum_hazard, y1 = avg_cum_hazard,
line = list(dash = "dash", width = 4, color = "#82A0D8")
)
fig <- fig %>% layout(
shapes = list(baseline)
) %>% add_text(
showlegend = FALSE, x = 0.25, y = 0.22, text = "Average hazard",
)
# Adding options to group them based on variables
library(RColorBrewer)
unique_index <- function(x) {
unique_vals <- unique(x)
first_occur <- integer(length(unique_vals))
for (i in 1:length(unique_vals)) {
first_occur[i] <- which(x == unique_vals[i])[1]
}
return(first_occur)
}
create_buttons <- function(vars) {
x <- factor(hr_sorted_rsf[[vars[2]]])
print(1:cutoff %in% unique_index(as.numeric(x)))
print(x)
lapply(vars, function(var) {
color_palletes <- brewer.pal(12, "Set3")
var_factors <- as.numeric(factor(hr_sorted_rsf[[var]]))
button <- list(
method = "restyle",
label = var,
args = list(list( # Some elements are just "double-list". This changes style to every DOM elements
line.color = color_palletes[var_factors],
marker.color = color_palletes[var_factors],
legendgroup = factor(hr_sorted_rsf[[var]]),
showlegend = 1:cutoff %in% unique_index(var_factors),
name = factor(hr_sorted_rsf[[var]]),
traces = 1:2
))
)
return(button)
})
}
# Setting layout
fig <- fig %>% layout(
title = "High-Risk Employee Attrition Trajectory",
xaxis = list(title = "Year", range = c(0, 5), zerolinecolor = '#ffff'),
yaxis = list(title = "Accummulated Risk until Year _", range = c(0, 1.5), zerolinecolor = '#ffff'),
plot_bgcolor = '#e5ecf6',
updatemenus = list(
list(
y = 0.9,
showactive = TRUE,
buttons = create_buttons(c("EmployeeNumber", "BusinessTravel", "EnvironmentSatisfaction", "Gender",
"JobLevel", "JobRole", "JobSatisfaction", "MaritalStatus", "NumCompaniesWorked",
"OverTime", "StockOptionLevel"))
)
),
annotations = list(
list(
text = "Based on", x = -0.3, xref = "paper", y = 1, yref = "paper", align = "left", showarrow = FALSE
)
)
)
fig
fig <- plot_ly(type = "scatter", mode = "lines+markers")
for (rank in 1:cutoff) {
employee_row_num <- as.numeric(rownames(hr_sorted_rsf)[rank])
employee_row <- hr_sorted_rsf[rank, ]
x <- 0:(ncol(rsf_risk)-1)
y <- rsf_risk[employee_row_num, ]
fig <- fig %>% add_trace(x = x,
y = y,
name = employee_row["EmployeeNumber"],
marker = list(size = 4),
line = list(shape = "spline", width = 1),
hoverinfo = "text",
text = paste0("<i>#", rank, ": Employee ", employee_row["EmployeeNumber"], "</i>",
"\nYear: ", x,
"\nScore: ", y),
legendgroup = employee_row["EmployeeNumber"],
showlegend = TRUE
)
}
# Including the baseline
avg_cum_hazard <- -log(1-mean(hr[, "Attrition"]))
baseline <- list(
type = "line", x0 = 0, x1 = 5, y0 = avg_cum_hazard, y1 = avg_cum_hazard,
line = list(dash = "dash", width = 4, color = "#82A0D8")
)
fig <- fig %>% layout(
shapes = list(baseline)
) %>% add_text(
showlegend = FALSE, x = 0.25, y = 0.22, text = "Average hazard",
)
# Adding options to group them based on variables
library(RColorBrewer)
unique_index <- function(x) {
unique_vals <- unique(x)
first_occur <- integer(length(unique_vals))
for (i in 1:length(unique_vals)) {
first_occur[i] <- which(x == unique_vals[i])[1]
}
return(first_occur)
}
create_buttons <- function(vars) {
x <- factor(hr_sorted_rsf[[vars[2]]])
print(1:cutoff %in% unique_index(as.numeric(x)))
print(x)
lapply(vars, function(var) {
color_palletes <- brewer.pal(12, "Set3")
var_factors <- as.numeric(factor(hr_sorted_rsf[[var]]))
button <- list(
method = "restyle",
label = var,
args = list(list( # Some elements are just "double-list". This changes style to every DOM elements
line.color = color_palletes[var_factors],
marker.color = color_palletes[var_factors],
legendgroup = factor(hr_sorted_rsf[[var]]),
showlegend = 1:cutoff %in% unique_index(var_factors),
name = factor(hr_sorted_rsf[[var]]),
traces = 1:2
))
)
return(button)
})
}
# Setting layout
fig <- fig %>% layout(
title = "High-Risk Employee Attrition Trajectory",
xaxis = list(title = "Year", range = c(0, 5), zerolinecolor = '#ffff'),
yaxis = list(title = "Accummulated Risk until Year _", range = c(0, 1.5), zerolinecolor = '#ffff'),
plot_bgcolor = '#e5ecf6',
updatemenus = list(
list(
y = 0.9,
showactive = TRUE,
buttons = create_buttons(c("EmployeeNumber", "BusinessTravel", "EnvironmentSatisfaction", "Gender",
"JobLevel", "JobRole", "JobSatisfaction", "MaritalStatus", "NumCompaniesWorked",
"OverTime", "StockOptionLevel"))
)
),
annotations = list(
list(
text = "Based on", x = -0.3, xref = "paper", y = 1, yref = "paper", align = "left", showarrow = FALSE
)
)
)
fig
